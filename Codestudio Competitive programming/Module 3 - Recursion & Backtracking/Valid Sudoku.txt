bool isSafe(int row, int col, int digit, int matrix[9][9]) {
    for(int i = 0; i < 9; i++)
        if(matrix[row][i] == digit) return false;
    
    for(int i = 0; i < 9; i++)
        if(matrix[i][col] == digit) return false;

    int newRow = (row / 3) * 3;
    int newCol = (col / 3) * 3;

    for(int i = newRow; i < newRow + 3; i++)
        for(int j = newCol; j < newCol + 3; j++)
            if(matrix[i][j] == digit) return false;
    
    return true;
}

bool solver(int row, int col, int matrix[9][9]) {
    if(row == 8 && col == 9) return true;
    else if(col == 9) {
        row++;
        col = 0;
    }

    if(matrix[row][col] != 0) return solver(row, col + 1, matrix);

    if(matrix[row][col] == 0) {
        for(int digit = 1; digit <= 9; digit++) {
            if(isSafe(row, col, digit, matrix)) {
                matrix[row][col] = digit;
                if(solver(row, col + 1, matrix)) return true;
                matrix[row][col] = 0;
            }
        }
    }

    return false;
}

bool isItSudoku(int matrix[9][9]) {
    return solver(0, 0, matrix);
}
