class Solution {
public:
    int uniquePaths(int m, int n) {
        
        // Using nCr Approach

        int N = n + m - 2;
        int r = m - 1;
        double res = 1;

        for(int i = 1; i <= r; i++)
            res = res * (N - r + i) / i;

        return (int)res;

        // Iterative and DP Approach
        
        /* 
        vector<int> prev(n, 0);
        for(int i = 0; i < m; i++){
            vector<int> curr(n, 0);
            for(int j = 0; j < n; j++){
                if(i == 0 && j == 0) curr[j] = 1;
                if(i == 0 && j != 0) curr[j] = curr[j-1];
                if(j == 0 && i != 0) curr[j] = prev[j];
                if(i != 0 && j != 0) curr[j] = prev[j] + curr[j-1];
            }
            prev = curr;
        }

        return prev[n - 1];
        
        */
    }
};