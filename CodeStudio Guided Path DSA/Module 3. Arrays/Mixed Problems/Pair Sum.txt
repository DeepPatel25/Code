from os import *
from sys import *
from collections import *
from math import *

def pairSum(arr, s):
    arr=sorted(arr)
    pairs = []

    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if arr[i] + arr[j] == s:
                pairs.append((arr[i], arr[j]))

    return pairs


#include <bits/stdc++.h>  
vector<vector<int>> pairSum(vector<int> &arr, int s){

   vector<vector<int>> ans;

   for(int i=0; i<arr.size(); i++){
      for(int j=i+1; j<arr.size(); j++){
         if(arr[i]+arr[j]==s){
            vector<int> temp;
            temp.push_back(min(arr[i], arr[j]));
            temp.push_back(max(arr[i], arr[j]));
            ans.push_back(temp);
         }
      }
   }

   sort(ans.begin(), ans.end());

   return ans;
}

#include <bits/stdc++.h>

vector<vector<int>> pairSum(vector<int> &arr, int s) {
   int i = 0;
   int j = arr.size() - 1;

   sort(arr.begin(), arr.end());
   vector<vector<int>> ans;

   while(i < j) {
      int sum = arr[i] + arr[j];

      if(sum == s) {
         ans.push_back({arr[i], arr[j]});

         int k = j - 1;
         while(arr[j] == arr[k] && i < k) {
            ans.push_back({arr[i], arr[k]});
            k--;
         }

         i++;
      } else if(sum < s) {
         i++;
      } else {
         j--;
      }
   }

   return ans;
}