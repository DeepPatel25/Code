#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){
    if(!root) return {};

    queue<pair<BinaryTreeNode<int>*, int>> q;
    map<int, int> mp;
        
    q.push({root, 0});
    mp[0] = root->data;
        
    while(!q.empty()) {
        auto node = q.front().first;
        int idx = q.front().second;
        q.pop();
            
        mp[idx] = node->data;
            
        if(node->left) q.push({node->left, idx - 1});
        if(node->right) q.push({node->right, idx + 1});
    }

    vector<int> ans;    
    for(auto it: mp) {
        ans.push_back(it.second);
    }
        
    return ans;
}
