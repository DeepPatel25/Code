#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure:

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };


************************************************************/
void inorder(BinaryTreeNode<int> *root, vector<int> &ans) {
    if(!root) return;

    ans.emplace_back(root->data);
    inorder(root->left, ans);
    inorder(root->right, ans);
}

void preorder(BinaryTreeNode<int> *root, vector<int> &ans) {
    if(!root) return;

    preorder(root->left, ans);
    ans.emplace_back(root->data);
    preorder(root->right, ans);
}

void postorder(BinaryTreeNode<int> *root, vector<int> &ans) {
    if(!root) return;

    postorder(root->left, ans);
    postorder(root->right, ans);
    ans.emplace_back(root->data);
}

vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    vector<vector<int>> ans(3);

    preorder(root, ans[0]);
    inorder(root, ans[1]);
    postorder(root, ans[2]);

    return ans;
}