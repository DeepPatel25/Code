#include <bits/stdc++.h> 

int firstPosition(vector<int>& arr, int n, int k) {
    int ans = -1;

    int start = 0;
    int end = n - 1;
    
    while(start <= end) {
        int mid = (start + end) / 2;

        if(arr[mid] == k) {
            ans = mid;
            end = mid - 1;
        } else if(arr[mid] > k) {
            end = mid - 1;
        } else {
            start = mid + 1;
        }
    }

    return ans;
}

int lastPosition(vector<int>& arr, int n, int k) {
    int ans = -1;

    int start = 0;
    int end = n - 1;
    
    while(start <= end) {
        int mid = (start + end) / 2;

        if(arr[mid] == k) {
            ans = mid;
            start = mid + 1;
        } else if(arr[mid] > k) {
            end = mid - 1;
        } else {
            start = mid + 1;
        }
    }

    return ans;
}

pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
    pair<int, int> p;
    p.first = firstPosition(arr, n, k);
    p.second = lastPosition(arr, n, k);

    return p;
}