vector<vector<int>> triplet(int n, vector<int> &nums)
{
    sort(nums.begin(), nums.end());
    vector<vector<int>> ans;
    if(nums[0] > 0) return {};

    for(int i = 0; i < n; i++) {
        int low = i + 1;
        int high = n - 1;
        int sum = 0;

        if(nums[i] > 0) break;
        if(i != 0&& nums[i] == nums[i - 1]) continue;

        while(low < high) {
            sum = nums[i] + nums[low] + nums[high];

            if(sum < 0) low++;
            else if (sum > 0) high--;
            else {
                ans.push_back({nums[i], nums[low], nums[high]});
                int last_low = nums[low];
                int last_high = nums[high];

                while(low < high && nums[low] == last_low) low++;
                while(low < high && nums[high] == last_high) high--;
            }
        }
    }

    return ans;
}
