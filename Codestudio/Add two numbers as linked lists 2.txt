#include <bits/stdc++.h> 
/************************************************************

    Following is the linked list node structure:
    
    template <typename T>
    class Node {
        public:
        T data;
        Node* next;

        Node(T data) {
            next = NULL;
            this->data = data;
        }
    };

************************************************************/
Node<int>* reverseLinkedList(Node<int>* &head){
    Node<int>* cnext = NULL;
    Node<int>* prev = NULL;
    Node<int>* curr = head;

    while(curr!=NULL){
       cnext = curr->next;
       curr->next = prev;
       prev = curr;
       curr = cnext;
    }
    return prev;
}


Node<int>* addTwoLists(Node<int>* first, Node<int>* second) {
    // Write your code here.
    Node<int>* l1 = reverseLinkedList(first);
    Node<int>* l2 = reverseLinkedList(second);
    Node<int>* dummy = new Node<int>(0);
    Node<int>* temp = dummy;

    int carry=0;
    while(l1!=NULL || l2!=NULL || carry){
        int sum=0;
        
        if(l1!=NULL){
            sum+= l1->data;
            l1 = l1->next;
        }
        
        if(l2!=NULL){
            sum+=l2->data;
            l2 = l2->next;
        }

        sum+=carry;
        carry = sum/10;
        Node<int>* newNode = new Node<int>(sum%10);
        temp->next = newNode;
        temp = temp->next;
    }

    Node<int>* result = reverseLinkedList(dummy->next);
    return result;
}