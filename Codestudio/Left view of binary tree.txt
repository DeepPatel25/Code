/************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode 
    {
        public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) 
        {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

void printLeftView(BinaryTreeNode<int> *root)
{
    if(!root) return;

    vector<vector<int>> ans;
    queue<BinaryTreeNode<int>*> q;
    q.push(root);

    while(!q.empty()) {
        vector<int> level;
        int size = q.size();

        for(int i = 0; i < size; i++) {
            auto node = q.front();
            q.pop();

            if(node->left) q.push(node->left);
            if(node->right) q.push(node->right);

            level.push_back(node->data);
        }

        ans.push_back(level);
    }

    int n = ans.size();
    for(int i = 0; i < n; i++)
        cout << ans[i][0] << " ";
}