/*
 * Definition for linked list.
 * class Node {
 *  public:
 *		int data;
 *		Node *next;
 *		Node() : data(0), next(nullptr) {};
 *		Node(int x) : data(x), next(nullptr) {}
 *		Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node* segregateEvenOdd(Node* head)
{
    vector<int> even, odd;
    Node* temp = head;

    while(temp) {
        if(temp->data % 2 == 0) even.push_back(temp->data);
        else odd.push_back(temp->data);
        
        temp = temp->next;
    }

    temp = head;
    int size = even.size();
    for(int i = 0; i < size; i++) {
        temp->data = even[i];
        temp = temp->next;
    }

    size = odd.size();
    for(int i = 0; i < size; i++) {
        temp->data = odd[i];
        temp = temp->next;
    }

    return head;
}
